//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jolt.Testing.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Jolt.Testing.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected namespace in attribute &apos;{0}&apos; from element &apos;{1}&apos;.
        ///Expected: {2}
        ///Actual: {3}.
        /// </summary>
        internal static string AssertionFailure_AttributeNamespaceMismatch {
            get {
                return ResourceManager.GetString("AssertionFailure_AttributeNamespaceMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element &apos;{0}&apos; differs in number of attributes..
        /// </summary>
        internal static string AssertionFailure_AttributeQuantityMismatch {
            get {
                return ResourceManager.GetString("AssertionFailure_AttributeQuantityMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected value in attribute &apos;{0}&apos; from element &apos;{1}&apos;.
        ///Expected: {2}
        ///Actual: {3}.
        /// </summary>
        internal static string AssertionFailure_AttributeValueMismatch {
            get {
                return ResourceManager.GetString("AssertionFailure_AttributeValueMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element &apos;{0}&apos; differs in number of child elements..
        /// </summary>
        internal static string AssertionFailure_ChildElementQuantityMismatch {
            get {
                return ResourceManager.GetString("AssertionFailure_ChildElementQuantityMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected namespace in element &apos;{0}&apos;.
        ///Expected: {1}
        ///Actual: {2}.
        /// </summary>
        internal static string AssertionFailure_ElementNamespaceMismatch {
            get {
                return ResourceManager.GetString("AssertionFailure_ElementNamespaceMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected value in element &apos;{0}&apos;.
        ///Expected: {1}
        ///Actual: {2}.
        /// </summary>
        internal static string AssertionFailure_ElementValueMismatch {
            get {
                return ResourceManager.GetString("AssertionFailure_ElementValueMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the required hash code semantics for object equality.
        ///Expected: x.GetHashCode() equals y.GetHashCode() when x.Eq(y), for the implemented equality function of the given type..
        /// </summary>
        internal static string AssertionFailure_Equality_HashCodeInconsistent {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_HashCodeInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the required hash code semantics for object equality.
        ///Expected: x.GetHashCode() does not equal x&apos;.GetHashCode() where x&apos; is x with modified equality-sensitive object state..
        /// </summary>
        internal static string AssertionFailure_Equality_HashCodeNotModified {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_HashCodeNotModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the null-inequality axiom for object equality.
        ///Expected: to x.Eq(null) returns false for the implemented equality function of the given type..
        /// </summary>
        internal static string AssertionFailure_Equality_NullInequality {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_NullInequality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the reflexivity axiom for object equality.
        ///Expected: x.Eq(y) == y.Eq(x), for the implemented equality function of the given type..
        /// </summary>
        internal static string AssertionFailure_Equality_ReflexivityAxiom {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_ReflexivityAxiom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the statelessness axiom for object equality.
        ///Expected: Successive calls to x.Eq(y) returns the same value when x and y remain unmodified, for the implemented equality function of the given type..
        /// </summary>
        internal static string AssertionFailure_Equality_StatelessnessAxiom {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_StatelessnessAxiom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the symmetry axiom for object equality.
        ///Expected: x.Eq(x) returns true, for the implemented equality function of the given type..
        /// </summary>
        internal static string AssertionFailure_Equality_SymmetryAxiom {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_SymmetryAxiom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not implement the transitivity axiom for object equality.
        ///Expected: x.Eq(y) &amp;&amp; x.Eq(z) returns true if and only if x.Eq(z) returns true, for the implemented equality function of the given type..
        /// </summary>
        internal static string AssertionFailure_Equality_TransitivityAxiom {
            get {
                return ResourceManager.GetString("AssertionFailure_Equality_TransitivityAxiom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected attribute &apos;{0}&apos; found in element &apos;{1}&apos;..
        /// </summary>
        internal static string AssertionFailure_UnexpectedAttribute {
            get {
                return ResourceManager.GetString("AssertionFailure_UnexpectedAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected element.
        ///Expected: {0}
        ///Actual: {1}.
        /// </summary>
        internal static string AssertionFailure_UnexpectedElement {
            get {
                return ResourceManager.GetString("AssertionFailure_UnexpectedElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constructor of type &apos;{0}&apos; must be declared at the same time its corresponding ConstructorBuilder is created..
        /// </summary>
        internal static string Error_DelayedConstructorDeclaration {
            get {
                return ResourceManager.GetString("Error_DelayedConstructorDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate method, property, or event detected within a type..
        /// </summary>
        internal static string Error_DuplicateMember {
            get {
                return ResourceManager.GetString("Error_DuplicateMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not add non-static method &apos;{0}&apos; to the proxy builder as the real subject type is abstract..
        /// </summary>
        internal static string Error_InstanceMethodAddedFromAbstractType {
            get {
                return ResourceManager.GetString("Error_InstanceMethodAddedFromAbstractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; has neither a public getter or a public setter..
        /// </summary>
        internal static string Error_InvalidProperty {
            get {
                return ResourceManager.GetString("Error_InvalidProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not override the return type from the property &apos;{0}&apos; because the property contains a setter method..
        /// </summary>
        internal static string Error_InvalidProperty_ReturnTypeOverride {
            get {
                return ResourceManager.GetString("Error_InvalidProperty_ReturnTypeOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The real subject type &apos;{0}&apos; is invalid.  It can not be a delegate or interface type..
        /// </summary>
        internal static string Error_InvalidRealSubjectType {
            get {
                return ResourceManager.GetString("Error_InvalidRealSubjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not override the return type from method &apos;{0}&apos; as the desired type &apos;{1}&apos; is not a base type of the method return type &apos;{2}&apos;..
        /// </summary>
        internal static string Error_InvalidReturnTypeOverride {
            get {
                return ResourceManager.GetString("Error_InvalidReturnTypeOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The proxy builder can only accept public methods, properties, and events..
        /// </summary>
        internal static string Error_MemberNotPublic {
            get {
                return ResourceManager.GetString("Error_MemberNotPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; does not belong to the proxy builder&apos;s real subject type..
        /// </summary>
        internal static string Error_MethodNotMemberOfRealSubject {
            get {
                return ResourceManager.GetString("Error_MethodNotMemberOfRealSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not override the return type of a constructor as a constructor does not have a return value..
        /// </summary>
        internal static string Error_OverrideCtorReturnType {
            get {
                return ResourceManager.GetString("Error_OverrideCtorReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The non-abstract real subject type &apos;{0}&apos; requires at least one public constructor..
        /// </summary>
        internal static string Error_RealSubjectType_LackingConstructor {
            get {
                return ResourceManager.GetString("Error_RealSubjectType_LackingConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; was not included as part of the proxy type as it is already defined as an event..
        /// </summary>
        internal static string Info_SkipDefinedEventMethod {
            get {
                return ResourceManager.GetString("Info_SkipDefinedEventMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; was not included as part of the proxy type as it is already defined as a property..
        /// </summary>
        internal static string Info_SkipDefinedPropertyMethod {
            get {
                return ResourceManager.GetString("Info_SkipDefinedPropertyMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate XML doc comments file for assembly &apos;{0}&apos;.  Procuction of XML doc comments is disabled..
        /// </summary>
        internal static string Info_XmlDocCommentsDisabled {
            get {
                return ResourceManager.GetString("Info_XmlDocCommentsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring return type override &apos;{0}&apos;-&gt;&apos;{1}&apos;.  An override for the return type &apos;{0}&apos; on the real subject type &apos;{2}&apos; is already specified..
        /// </summary>
        internal static string Warn_IgnoreReturnTypeOverride_Ambiguous {
            get {
                return ResourceManager.GetString("Warn_IgnoreReturnTypeOverride_Ambiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load the type &apos;{0}&apos;..
        /// </summary>
        internal static string Warn_TypeNotLoaded {
            get {
                return ResourceManager.GetString("Warn_TypeNotLoaded", resourceCulture);
            }
        }
    }
}
